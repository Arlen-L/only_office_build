# This is a basic workflow to help you get started with Actions

name: V8

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:

    runs-on: ubuntu-16.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Clone source code and alter it
      run: |
        mkdir /opt/temp
        cd /opt/temp/
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
    - name:  Get depends
      run: |
        export PATH=/opt/temp/depot_tools:$PATH
        gclient
        mkdir /opt/temp/v8
        cd /opt/temp/v8/
        fetch v8
        cd v8
        git checkout 6.0-lkgr
        gclient sync
        gn gen out.gn/mips64el.release "--args=is_debug=false is_clang=true use_sysroot=false treat_warnings_as_errors=false target_cpu=\"mipse64el\" v8_target_cpu=\"mipse64el\" v8_static_library=true is_component_build=false v8_use_snapshot=false target_os=\"linux\" mips_arch_variant=\"loongson3\" mips_use_mmi=true"
        gn args out.gn/mips64el.release --list
        ninja -C out.gn/mips64el.release
    - name:  Zip package
      run: |
        mkdir /opt/out
        cd `ls | find /opt/temp/ -name out.gn`
        sudo tar -cvf /opt/out/out.tar *
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-6.0-lkgr
        release_name: Release ${{ github.ref }}-6.0-lkgr
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: /opt/out/out.tar
        asset_name: out.tar
        asset_content_type: application/tar
